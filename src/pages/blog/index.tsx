import PoetryLayout from 'components/layouts/PoetryLayout/PoetryLayout';
import ItemsList from 'components/shared/ItemsList';
import { TitleBlock, SubtitleBlock } from 'styles/Typography';

export interface IPortfolioProps {
  data: {
    blog: any;
    categories: any;
  };
}

export default function PoetryPage({ data }: IPortfolioProps): JSX.Element {
  const blogItems = data?.blog?.edges;
  const categoriesItems = data?.categories?.edges;

  return (
    <PoetryLayout
      headTitle="Ckomop0x.me | –°—Ç–∞—Ç—å–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
      ogUrl="https://ckomop0x.me/poetry/"
      ogDescription="Ckomop0x.me | –°—Ç–∞—Ç—å–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
      twitterCard="Ckomop0x.me | –°—Ç–∞—Ç—å–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
    >
      <div className="container">
        <TitleBlock>–ë–ª–æ–≥</TitleBlock>
        <SubtitleBlock>–ú–æ–∏ —Å—Ç–∞—Ç—å–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã.</SubtitleBlock>
        {blogItems ? (
          <ItemsList items={blogItems} categories={categoriesItems} />
        ) : (
          '–ó–¥–µ—Å—å –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ—Ç –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. üòé'
        )}
      </div>
    </PoetryLayout>
  );
}

// export const query = graphql`
//   query blogPageQuery {
//     blog: allStrapiPosts(
//       filter: { category: { eq: "blog" } }
//       sort: { fields: [createdAt] }
//       limit: 100
//     ) {
//       edges {
//         node {
//           ...PostFields
//         }
//       }
//     }
//     categories: allStrapiCategories {
//       edges {
//         ...StrapiCategories
//       }
//     }
//   }
// `;
